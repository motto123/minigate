// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: gate/gate.proto

package gate

import (
	auth "com.minigame.proto/auth"
	common "com.minigame.proto/common"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  uint64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Body []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SendInfo) Reset() {
	*x = SendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_gate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInfo) ProtoMessage() {}

func (x *SendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gate_gate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInfo.ProtoReflect.Descriptor instead.
func (*SendInfo) Descriptor() ([]byte, []int) {
	return file_gate_gate_proto_rawDescGZIP(), []int{0}
}

func (x *SendInfo) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *SendInfo) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ReceiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverSids []uint64 `protobuf:"varint,1,rep,packed,name=receiverSids,proto3" json:"receiverSids,omitempty"`
	ReceiverUids []int64  `protobuf:"varint,2,rep,packed,name=receiverUids,proto3" json:"receiverUids,omitempty"`
	MsgId        uint64   `protobuf:"varint,3,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgType      int32    `protobuf:"varint,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	Body         []byte   `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ReceiveInfo) Reset() {
	*x = ReceiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_gate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveInfo) ProtoMessage() {}

func (x *ReceiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gate_gate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveInfo.ProtoReflect.Descriptor instead.
func (*ReceiveInfo) Descriptor() ([]byte, []int) {
	return file_gate_gate_proto_rawDescGZIP(), []int{1}
}

func (x *ReceiveInfo) GetReceiverSids() []uint64 {
	if x != nil {
		return x.ReceiverSids
	}
	return nil
}

func (x *ReceiveInfo) GetReceiverUids() []int64 {
	if x != nil {
		return x.ReceiverUids
	}
	return nil
}

func (x *ReceiveInfo) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *ReceiveInfo) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ReceiveInfo) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ResponseErr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *common.ResponseCode `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ResponseErr) Reset() {
	*x = ResponseErr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_gate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseErr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseErr) ProtoMessage() {}

func (x *ResponseErr) ProtoReflect() protoreflect.Message {
	mi := &file_gate_gate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseErr.ProtoReflect.Descriptor instead.
func (*ResponseErr) Descriptor() ([]byte, []int) {
	return file_gate_gate_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseErr) GetCode() *common.ResponseCode {
	if x != nil {
		return x.Code
	}
	return nil
}

type BindUserDataForSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  uint64     `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	User *auth.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *BindUserDataForSessionReq) Reset() {
	*x = BindUserDataForSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_gate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserDataForSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserDataForSessionReq) ProtoMessage() {}

func (x *BindUserDataForSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_gate_gate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserDataForSessionReq.ProtoReflect.Descriptor instead.
func (*BindUserDataForSessionReq) Descriptor() ([]byte, []int) {
	return file_gate_gate_proto_rawDescGZIP(), []int{3}
}

func (x *BindUserDataForSessionReq) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *BindUserDataForSessionReq) GetUser() *auth.User {
	if x != nil {
		return x.User
	}
	return nil
}

type GeneralResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code common.InternalCode `protobuf:"varint,1,opt,name=code,proto3,enum=common.InternalCode" json:"code,omitempty"`
}

func (x *GeneralResp) Reset() {
	*x = GeneralResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gate_gate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralResp) ProtoMessage() {}

func (x *GeneralResp) ProtoReflect() protoreflect.Message {
	mi := &file_gate_gate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralResp.ProtoReflect.Descriptor instead.
func (*GeneralResp) Descriptor() ([]byte, []int) {
	return file_gate_gate_proto_rawDescGZIP(), []int{4}
}

func (x *GeneralResp) GetCode() common.InternalCode {
	if x != nil {
		return x.Code
	}
	return common.InternalCode(0)
}

var File_gate_gate_proto protoreflect.FileDescriptor

var file_gate_gate_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x67, 0x61, 0x74, 0x65, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x30, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73,
	0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x37,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x12, 0x28, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x62, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32,
	0x57, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x53, 0x72, 0x76, 0x12, 0x4c, 0x0a, 0x16, 0x62, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x62, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x67, 0x61, 0x74,
	0x65, 0x3b, 0x67, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gate_gate_proto_rawDescOnce sync.Once
	file_gate_gate_proto_rawDescData = file_gate_gate_proto_rawDesc
)

func file_gate_gate_proto_rawDescGZIP() []byte {
	file_gate_gate_proto_rawDescOnce.Do(func() {
		file_gate_gate_proto_rawDescData = protoimpl.X.CompressGZIP(file_gate_gate_proto_rawDescData)
	})
	return file_gate_gate_proto_rawDescData
}

var file_gate_gate_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gate_gate_proto_goTypes = []interface{}{
	(*SendInfo)(nil),                  // 0: gate.sendInfo
	(*ReceiveInfo)(nil),               // 1: gate.receiveInfo
	(*ResponseErr)(nil),               // 2: gate.responseErr
	(*BindUserDataForSessionReq)(nil), // 3: gate.bindUserDataForSessionReq
	(*GeneralResp)(nil),               // 4: gate.generalResp
	(*common.ResponseCode)(nil),       // 5: common.responseCode
	(*auth.User)(nil),                 // 6: auth.user
	(common.InternalCode)(0),          // 7: common.internalCode
}
var file_gate_gate_proto_depIdxs = []int32{
	5, // 0: gate.responseErr.code:type_name -> common.responseCode
	6, // 1: gate.bindUserDataForSessionReq.user:type_name -> auth.user
	7, // 2: gate.generalResp.code:type_name -> common.internalCode
	3, // 3: gate.GateSrv.bindUserDataForSession:input_type -> gate.bindUserDataForSessionReq
	4, // 4: gate.GateSrv.bindUserDataForSession:output_type -> gate.generalResp
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gate_gate_proto_init() }
func file_gate_gate_proto_init() {
	if File_gate_gate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gate_gate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_gate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_gate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseErr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_gate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserDataForSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gate_gate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gate_gate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gate_gate_proto_goTypes,
		DependencyIndexes: file_gate_gate_proto_depIdxs,
		MessageInfos:      file_gate_gate_proto_msgTypes,
	}.Build()
	File_gate_gate_proto = out.File
	file_gate_gate_proto_rawDesc = nil
	file_gate_gate_proto_goTypes = nil
	file_gate_gate_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GateSrvClient is the client API for GateSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GateSrvClient interface {
	BindUserDataForSession(ctx context.Context, in *BindUserDataForSessionReq, opts ...grpc.CallOption) (*GeneralResp, error)
}

type gateSrvClient struct {
	cc grpc.ClientConnInterface
}

func NewGateSrvClient(cc grpc.ClientConnInterface) GateSrvClient {
	return &gateSrvClient{cc}
}

func (c *gateSrvClient) BindUserDataForSession(ctx context.Context, in *BindUserDataForSessionReq, opts ...grpc.CallOption) (*GeneralResp, error) {
	out := new(GeneralResp)
	err := c.cc.Invoke(ctx, "/gate.GateSrv/bindUserDataForSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GateSrvServer is the server API for GateSrv service.
type GateSrvServer interface {
	BindUserDataForSession(context.Context, *BindUserDataForSessionReq) (*GeneralResp, error)
}

// UnimplementedGateSrvServer can be embedded to have forward compatible implementations.
type UnimplementedGateSrvServer struct {
}

func (*UnimplementedGateSrvServer) BindUserDataForSession(context.Context, *BindUserDataForSessionReq) (*GeneralResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindUserDataForSession not implemented")
}

func RegisterGateSrvServer(s *grpc.Server, srv GateSrvServer) {
	s.RegisterService(&_GateSrv_serviceDesc, srv)
}

func _GateSrv_BindUserDataForSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindUserDataForSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GateSrvServer).BindUserDataForSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gate.GateSrv/BindUserDataForSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GateSrvServer).BindUserDataForSession(ctx, req.(*BindUserDataForSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GateSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gate.GateSrv",
	HandlerType: (*GateSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "bindUserDataForSession",
			Handler:    _GateSrv_BindUserDataForSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gate/gate.proto",
}
